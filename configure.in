AC_INIT(libgnomevfs/gnome-vfs.h)
AM_CONFIG_HEADER(config.h)
AM_INIT_AUTOMAKE(gnome-vfs, 0.0)
AM_ACLOCAL_INCLUDE(macros)

AM_MAINTAINER_MODE

GNOME_INIT

AC_ISC_POSIX
AC_PROG_CC
AC_PROG_AWK
AM_PROG_LIBTOOL

AC_ARG_ENABLE(gconf,
              [  --enable-gconf          Enable GConf access backend],
              gconf_enabled="yes")
AC_ARG_WITH(default-backend,
	      [  --with-default-backend=(corba|pthread)		    ],
	      default_backend="$withval")

AM_PATH_GLIB(1.2.0,,
  AC_MSG_ERROR([
*** GLIB 1.2.0 or better is required. The latest version of GLIB
*** is always available from ftp://ftp.gtk.org/.]),
    gmodule gthread)

GNOME_COMPILE_WARNINGS
GNOME_SUPPORT_CHECKS
GNOME_PTHREAD_CHECK

ALL_LINGUAS="da de el it fr gl no pl pt_BR sv tr uk"
AM_GNOME_GETTEXT

AC_FUNC_ALLOCA
AC_CHECK_FUNCS(getdtablesize open64 lseek64)
AC_REPLACE_FUNCS(getdelim)

AC_CHECK_HEADERS(sys/resource.h)

dnl Paths for `gnome-config'.

dnl CORBA backend.
VFSCORBA_LIBDIR='-L${libdir}'
VFSCORBA_INCLUDEDIR='-I${includedir}'
VFSCORBA_INCLUDEDIR="$VFSCORBA_INCLUDEDIR `gnome-config --cflags gnome gnomeui` `orbit-config --cflags server`"
VFSCORBA_LIBS="-lgnomevfs -lgnomevfs-corba `gnome-config --libs gnome gnomeui` `orbit-config --libs server`"
AC_SUBST(VFSCORBA_LIBDIR)
AC_SUBST(VFSCORBA_INCLUDEDIR)
AC_SUBST(VFSCORBA_LIBS)

dnl Pthread backend.
VFSPTHREAD_LIBDIR='-L${libdir}'
VFSPTHREAD_INCLUDEDIR='-I${includedir}'
VFSPTHREAD_INCLUDEDIR="$VFSPTHREAD_INCLUDEDIR `gnome-config --cflags gnome`"
VFSPTHREAD_LIBS="-lgnomevfs -lgnomevfs-pthread `gnome-config --libs gnome` `glib-config --libs gthread`"
AC_SUBST(VFSPTHREAD_LIBDIR)
AC_SUBST(VFSPTHREAD_INCLUDEDIR)
AC_SUBST(VFSPTHREAD_LIBS)

dnl Default backend (CORBA for now).
if test -z "$default_backend"; then
	default_backend="corba"
fi
AC_DEFINE_UNQUOTED(GNOME_VFS_DEFAULT_BACKEND, "$default_backend")

VFS_LIBS="-lgnomevfs `glib-config --libs gthread gmodule`"
VFS_LIBDIR='-L${libdir}'
VFS_INCLUDEDIR='-I${includedir}'" `glib-config --cflags gthread gmodule`"
AC_SUBST(VFS_LIBDIR)
AC_SUBST(VFS_INCLUDEDIR)
AC_SUBST(VFS_LIBS)

dnl 
dnl gconf-method.c
dnl

if test "x$gconf_enabled" = xyes; then 
    AC_PATH_PROG(GCONF_CONFIG, gconf-config, no)
else
    GCONF_CONFIG=no
fi

if test x$GCONF_CONFIG = xno; then
    AC_MSG_WARN([*** \`gconf' method will not be built ***])
    GCONF_LIBS=
    GCONF_CFLAGS=
    GTK_LIBS=
    GTK_CFLAGS=
else
    dnl gconf-config is broken, it should have a GTK module option
    AC_PATH_PROG(GTK_CONFIG, gtk-config, no)
    if test x$GTK_CONFIG = xno; then
       AC_MSG_WARN([*** gconf method will not be built, no GTK found ***])
    else  
       GTK_LIBS=`$GTK_CONFIG --libs`
       GTK_CFLAGS=`$GTK_CONFIG --cflags`
       if test -n "$GTK_LIBS"; then
          GCONF_LIBS=`$GCONF_CONFIG --libs`
          GCONF_CFLAGS=`$GCONF_CONFIG --cflags`
          GCONF_LIBS="$GCONF_LIBS -lgconf-gtk"
       fi
    fi
fi

AM_CONDITIONAL(HAVE_GCONF, test -n "$GCONF_LIBS") 

AC_SUBST(GCONF_LIBS)
AC_SUBST(GCONF_CFLAGS)
AC_SUBST(GTK_LIBS)
AC_SUBST(GTK_CFLAGS)

dnl
dnl ftp-method.c
dnl
AC_DEFUN(AC_STRUCT_LINGER, [
av_struct_linger=no
AC_MSG_CHECKING(struct linger is available)
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/socket.h>

struct linger li;

main ()
{
    li.l_onoff = 1;
    li.l_linger = 120;
    exit (0);
}
],[
AC_DEFINE(HAVE_STRUCT_LINGER)
av_struct_linger=yes
],[
av_struct_linger=no
],[
av_struct_linger=no
])
AC_MSG_RESULT($av_struct_linger)
])

AC_CHECK_LIB(nsl, t_accept)
AC_CHECK_LIB(socket, socket)

have_socket=no
AC_CHECK_FUNCS(socket, have_socket=yes)
if test $have_socket = no; then
  # socket is not in the default libraries.  See if it's in some other.
  for lib in bsd socket inet; do
    AC_CHECK_LIB($lib, socket, [
	  LIBS="$LIBS -l$lib"
	  have_socket=yes
	  AC_DEFINE(HAVE_SOCKET)
	  break])
  done
fi

have_gethostbyname=no
AC_CHECK_FUNC(gethostbyname, have_gethostbyname=yes)
if test $have_gethostbyname = no; then
  # gethostbyname is not in the default libraries.  See if it's in some other.
  for lib in bsd socket inet; do
    AC_CHECK_LIB($lib, gethostbyname, [LIBS="$LIBS -l$lib"; have_gethostbyname=yes; break])
  done
fi

if test $have_socket = yes; then
    AC_STRUCT_LINGER
fi

dnl Final touch

AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(LDFLAGS)

dnl This is needed by `test/vfs-run.in'
TOP_BUILDDIR="`pwd`"
AC_SUBST(TOP_BUILDDIR)

dnl Output files

AC_OUTPUT([
Makefile
idl/Makefile
intl/Makefile
libgnomevfs-corba/Makefile
libgnomevfs-pthread/Makefile
libgnomevfs/Makefile
modules/Makefile
modules/extfs/Makefile
modules/extfs/ar
modules/extfs/cpio
modules/extfs/deb
modules/extfs/lha
modules/extfs/rar
modules/extfs/zip
modules/extfs/zoo
po/Makefile.in
test/Makefile
test/gnome-file-selection/Makefile
test/vfs-run
])

chmod u+x test/vfs-run
