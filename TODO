Things to complete
------------------

* tar method.

* GZIP write support might be broken.

* FTP is *extremely* broken, and is nowhere near being MT-safe.  I
  wonder if we shouldn't rewrite it from scratch borrowing code from
  somewhere else (wget comes to mind and, even if it's GPL, I think
  the FSF would not mind allowing us to distribute a modified version
  of it as LGPL).

* Complete HTTP support.

* Implement SMB support through Wayne's cool librarified Samba client
  stuff.

* The xfer function does not honour all the flags appropriately: it
  doesn't set the attributes and it cannot copy special files.

* Names containing the `#' character are likely to cause disasters.
  We need to provide quoting everywhere.

* Make sure that only one module is initialized at a given time
  (i.e. add a lock that must be obtained before calling the
  `vfs_module_init()' function).

* Complete the cancellation code.

API issues
----------

* If you use the CORBA version, you need to initialize your
application with `gnome_CORBA_init()'; if you use the pthread version,
you need to initialize it with `g_thread_init()'.  This is not good.

* Better hiding of private stuff.

* We definitely need an `URI context', which is basically a URI prefix
which is used for subsequent calls.  When creating a context, backends
can assume they are going to get several requests for sub-URIs
starting from that URI, and can try to optimize things.  OR maybe we
can just have a function to "lock" a certain URI.  This will make
everything easier to implement.

* The asynchronous directory reading stuff needs a timeout.

* Make directory/xfer calls cancellable as well.

Installation issues
-------------------

* Modules are currently installed under $prefix/lib/vfs/modules.

* We probably need to install the private headers too.  Otherwise, it
  is not possible to write new modules without the full gnome-vfs
  source code.  Maybe we need to have more than two levels (i.e. more
  than just "private" and "public" headers).


Implementation issues
---------------------

* find . -name '*.[ch]' -print | xargs grep FIXME

* Every time you read or write asynchronously, the CORBA backend will
  dynamically allocate the buffer.  This is lame: we should just
  re-allocate the buffer only if the required is bigger than the one of
  the previous call.

* Destroying a job or an asynchronous handle should be done better in the
  pthread version.

* Complete unfinished errno -> GnomeVFSError translation
  (`gnome_vfs_error_from_errno()' in `gnome-vfs-error.c').

* Portability checks and fixes.  I am sure I forgot lots of details.

* We currently use GNOME MIME functions for file types instead of GNOME
  metadata.  Should this be fixed so that we use the "type" metadata key
  instead?

* MIME functions in GNOME are non-reentrant.  We need to wrap them
  somehow, or the threaded version of the VFS will suffer major
  breakage when figuring out MIME types.

* Metadata key lists are passed as arrays to the API calls, but are passed
  as GLists to the backend modules.  This requires conversion, and might
  be a performance issue.  Maybe we should just use arrays for the
  modules as well.

