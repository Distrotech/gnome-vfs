Things to complete
------------------

* FTP, HTTP, SMB, extfs, tar methods.
  --- If you want to help, this is the right place to start ---  :-)

* GZIP write support might be broken.

* The transfer function does not honour all the flags appropriately,
  it doesn't set the attributes, it cannot copy special files and file
  moving is completely unimplemented.  This is going to be fixed soon.

* Names containing the `#' character are likely to cause disasters.


API issues
----------

* If you use the CORBA version, you need to initialize your
application with `gnome_CORBA_init()'; if you use the pthread version,
you need to initialize it with `g_thread_init()'.  This is not good.

* Better hiding of private stuff.

* 64-bit support?

* We definitely need an `URI context', which is basically a URI prefix which
is used for subsequent calls.  When creating a context, backends can
assume they are going to get several requests for sub-URIs starting
from that URI, and can try to optimize things.

* The asynchronous directory reading stuff needs a timeout.

* Make directory/xfer calls cancellable as well.


Installation issues
-------------------

* Modules are currently installed under $prefix/lib/vfs/modules.

* We probably need to install the private headers too.  Otherwise, it
  is not possible to write new modules without the full gnome-vfs
  source code.  Maybe we need to have more than two levels (i.e. more
  than just "private" and "public" headers).


Implementation issues
---------------------

* find . -name '*.[ch]' -print | xargs grep FIXME

* Every time you read or write asynchronously, the CORBA backend will
  dynamically allocate the buffer.  This is lame: we should just
  re-allocate the buffer only if the required is bigger than the one of
  the previous call.

* Destroying a job or an asynchronous handle should be done better in the
  pthread version.

* It should normalize URIs before using them.

* Complete unfinished errno -> GnomeVFSError translation
  (`gnome_vfs_error_from_errno()' in `gnome-vfs-error.c').

* Portability checks and fixes.  I am sure I forgot lots of details.

* We currently use GNOME MIME functions for file types instead of GNOME
  metadata.  Should this be fixed so that we use the "type" metadata key
  instead?

* MIME/metadata functions in GNOME are non-reentrant.  We
  need to wrap them somehow, or the threaded version of the VFS will
  suffer major breakage when accessing metadata or figuring out MIME
  types.

* Metadata key lists are passed as arrays to the API calls, but are passed
  as GLists to the backend modules.  This requires conversion, and might
  be a performance issue.  Maybe we should just use arrays for the
  modules as well.

