1999-09-06  Ettore Perazzoli  <ettore@comm2000.it>

	* libgnomevfs/gnome-vfs-method.c: New type `MethodElement'.
	(gnome_vfs_method_get): Put `MethodElement's in the hash table
	instead of `GnomeVFSMethod's.
	(module_get_sane_handle): Do not check for get_file_info.

	* modules/file-method.c (do_open): Removed wrong directory test.
	(do_create): Removed stupid stat check.
	(do_seek): Call LSEEK() correctly.
	(do_tell): Likewise.

1999-09-05  Michael Meeks  <michael@imaginator.com>

	* test/Makefile.am (noinst_PROGRAMS): Added test_seek.

	* libgnomevfs/gnome-vfs-method.c (module_get_sane_handle):
	Add check for 'seek' and no 'tell'.

1999-09-05  Ettore Perazzoli  <ettore@comm2000.it>

	* modules/file-method.c (do_open): Fstat the file; if it's a
	directory, return `GNOME_VFS_ERROR_ISDIRECTORY'.
	(do_create): Likewise.

1999-09-04  Ettore Perazzoli  <ettore@comm2000.it>

	* modules/file-method.c (stat_to_file_info): New helper function.
	(get_stat_info_from_handle): New function to get GnomeVFSFileInfo
	from an existing handle.
	(do_get_file_info_from_handle): New function, implementing the
	`get_file_info_from_handle' method.

	* modules/ftp-method.c: Likewise.
	* modules/gconf-method.c: Likewise.
	* modules/http-method.c: Likewise.

	* modules/gzip-method.c: Set the `get_file_info_from_handle'
	method to NULL.

	* libgnomevfs/gnome-vfs-private-types.h: New member
	`get_file_info_from_handle' in `GnomeVFSMethod'.

	* libgnomevfs/gnome-vfs-handle.c
	(gnome_vfs_handle_do_get_file_info): New function.

	* libgnomevfs/gnome-vfs-ops.c
	(gnome_vfs_get_file_info_from_handle): New function.

	* libgnomevfs/gnome-vfs-private-types.h: New typedef.
	`GnomeVFSMethodGetFileInfoFromHandleFunc'.

	* modules/file-method.c (do_create): Renamed `file_method' to
	`file_handle'.

1999-09-02  Ettore Perazzoli  <ettore@comm2000.it>

	* libgnomevfs/gnome-vfs-process.c: Improved SIGCHLD handling.
	(sigchld_handler): Instead of waking the GLIB loop up once for
	every dead child, wake it up only for registered children.
	(foreach_pid_func): Helper function for `sigchld_handler'.  It
	sends a pointer to the process struct and the exit status to the
	wake up GIOChannel.
	(wake_up): Handle the information as sent by `foreach_pid_func'.

1999-09-01  Dave Camp  <campd@oit.edu>

	* modules/gconf-method.c: Explicitly set the `remove_directory'
	method to NULL.

1999-09-01  Ettore Perazzoli  <ettore@comm2000.it>

	* modules/http-method.c: Explicitly set the `remove_directory'
	method to NULL.

	* modules/ftp-method.c (ftpfs_remove_directory): New function, for
	future implementation of the `remove_directory' method.

	* modules/gzip-method.c: Explicitly set the `remove_directory' and
	`rename' methods to NULL.

	* modules/file-method.c (do_remove_directory): New function,
	implementing the `remove_directory' method.

	* libgnomevfs/gnome-vfs-ops.c
	(gnome_vfs_remove_directory_from_uri): New function.
	(gnome_vfs_remove_directory): New function.

	* libgnomevfs/gnome-vfs-private-types.h: New typedef
	`GnomeVFSMethodRemoveDirectoryFunc'.  Added member
	`remove_directory' to `GnomeVFSMethod'.

	* libgnomevfs/gnome-vfs-ops.c (gnome_vfs_tell): Removed parameter
	`whence'.

	* libgnomevfs/gnome-vfs-handle.c (gnome_vfs_handle_do_tell):
	Removed parameter `whence'.

	* libgnomevfs/gnome-vfs-private-types.h: Removed parameter
	`whence' from the `GnomeVFSMethodTellFunc' function typedef.
	* modules/file-method.c: Updated accordingly.
	* modules/ftp-method.c: Updated accordingly.
	* modules/http-method.c: Updated accordingly.

1999-09-01  Dave Camp  <campd@oit.edu>

	* modules/gconf-method.c (set_mime_type_value): Return a 
	GnomeVFSResult, check return value of calls.
	(set_mime_type_dir): Ditto.
	(set_stat_info_dir): Ditto.
	(file_info_value): Ditto.
	(file_info_dir): Ditto.
	(read_directory): Ditto.

1999-09-01  Dave Camp  <campd@oit.edu>

	* configure.in: Check for GConf.

	* modules/Makefile.am: Build libgconf.la if HAVE_GCONF is set.

	* modules/gconf-method.c: New file.

1999-09-01  Ettore Perazzoli  <ettore@comm2000.it>

	* test/test-async-directory.c (directory_load_callback): Added
	cast for printf.

	* modules/file-method.c:  Removed `init()' prototype.
	* modules/gzip-method.c: Likewise.

	* libgnomevfs-pthread/gnome-vfs-job.c (serve_channel_read): Use
	`GnomeVFSFileSize' appropriately.
	(serve_channel_write): Likewise.

	* test/test-async-directory.c (print_list): Fix format string to
	handle long longs.
	* test/test-async.c (read_callback): Likewise.
	* test/test-copy.c (xfer_progress_callback): Likewise.
	* test/test-directory.c (print_list): Likewise.
	* test/test-directory-visit.c (directory_visit_callback): Likewise.

	* modules/file-method.c: #define `_LARGEFILE64_SOURCE' before
	including anything.  #define `OPEN' to `open64' if available, to
	`open' otherwise.  #define `LSEEK' to `lseek64' if available, to
	`lseek' otherwise.  Likewise, #define `OFF_T' to either `off_t' or
	`off64_t', accordingly.
	(do_open): Use the `OPEN' macro instead of `open()'.
	(do_create): Likewise.
	(do_seek): Use the `LSEEK' macro instead of `lseek()'.
	(do_tell): Likewise.
	(do_tell): Use the `OFF_T' instead of `off_t'.

	* libgnomevfs/gnome-vfs-types.h: Define `GnomeVFSFileSize' as
	`guint64' and `GnomeVFSFileOffset' to `gint64' if we have gint64
	support

	* configure.in: Check for `open64' and `lseek64'.

	* libgnomevfs/gnome-vfs-types.h: Added comment with instructions
	for modifying the GnomeVFSResult properly.

	* libgnomevfs/gnome-vfs-result.c: Added status strings for
	`GNOME_VFS_ERROR_INTERRUPTED' and `GNOME_VFS_ERROR_FILEEXISTS'.

1999-08-31  Michael Meeks  <michael@imaginator.com>

	* modules/file-method.c: Rename module init and add shutdown & include.
	* modules/ftp-method.c: ditto.
	* modules/gzip-method.c: ditto.
	* modules/http-method.c: ditto.

	* libgnomevfs/gnome-vfs-module.h: Create.

	* libgnomevfs/gnome-vfs-method.c (module_get_sane_handle): Add &
	use new function name macros.
	(gnome_vfs_method_get): move some stuff & call get_sane_handle.

1999-08-31  Miguel de Icaza  <miguel@gnu.org>

	* modules/ftp-method.c: new global: got_sigpipe.
	(ftpfs_connection_connect): Init sigpipe handler;  Only connect if
	connection is invalid.
	(get_file_entry): Apply IS_LINEAR on proper flags.
	(ftpfs_open): Use the linear state as computed in get_file_entry.
	(ftpfs_read): Implemented.
	(ftpfs_close): Implemented.
	(ftpfs_create): Implemented.
	(ftpfs_seek): Implemented.
	(ftpfs_tell): Implemented.

1999-08-30  Miguel de Icaza  <miguel@gnu.org>

	* modules/ftp-method.c (ftpfs_dir_unref): New method.

1999-08-29  Miguel de Icaza  <miguel@gnu.org>

	* libgnomevfs/gnome-vfs-types.h: New error types.
	
	* libgnomevfs/gnome-vfs-result.c: Return nice results for it.

1999-08-30  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* modules/ftp-method.c (IS_LINEAR): Define macro.
	GNOME_VFS_OPEN_RANDOM means we need seek support, otherwise we are
	a linear transfer.  Cool.

1999-08-28  Ettore Perazzoli  <ettore@comm2000.it>

	* libgnomevfs-corba/gnome-vfs-async-ops.c
	(impl_Notify_load_directory): Copy `name' and allocate it
	dynamically.

	* libgnomevfs-corba/gnome-vfs-slave.c (allocate_info_list):
	Initialize `name' to NULL.
	(copy_file_info): Copy `name' into the CORBA `FileInfo' struct
	using `set_corba_string'.

	* idl/gnome-vfs-slave.idl: Added member `name' to `FileInfo'.

	* modules/file-method.c (read_directory): Allocate the name in the
	`GnomeVFSFileInfo' struct dynamically.
	(do_get_file_info): Set `name' in the info using `g_basename'.

	* libgnomevfs/gnome-vfs-file-info.c (gnome_vfs_file_info_clear):
	Free `name'.
	(gnome_vfs_file_info_copy): Realloc `name' in the destination
	`GnomeVFSFileInfo'.

	* libgnomevfs/gnome-vfs-types.h: Removed #definition of
	`GNOME_VFS_FILE_NAME_LEN'.  Member `name' of `GnomeVFSFileInfo'
	changed from `char []' to `char *'.

1999-08-27  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* modules/util-url.c, modules/ftp-method.c: New files for the
	implementation of the FTP backend.

1999-08-26  Miguel de Icaza  <miguel@nuclecu.unam.mx>

	* test/gnome-file-selection/gnome-file-selection.c
	(setup_directory_clist): Also push the colormap and pop the
	colormap. 

1999-08-27  Ettore Perazzoli  <ettore@comm2000.it>

	* test/gnome-file-selection/gicon.c: Do not #define `ICONDIR'
	manually anymore.

	* test/gnome-file-selection/Makefile.am (INCLUDES): Added quick &
	dirty `-DICONDIR' definition.

1999-08-26  Ettore Perazzoli  <ettore@comm2000.it>

	* libgnomevfs-pthread/gnome-vfs-job.h: Changed `is_empty' member
	of `GnomeVFSJob' from 1-bit wide gboolean to plain gboolean.

	* modules/Makefile.am (modules_LTLIBRARIES): Removed previously
	commented HTTP module.

	* test/Makefile.am: Minor cleanup.
	(noinst_PROGRAMS): Replace `test-async-pthread' with
	`test-async_pthread' and `test-async-corba' with
	`test-async_corba'.  Added `test-channel_corba' and
	`test-channel_pthread'.
	(test-channel_corba): New target, compiling `test-channel.c' with
	the CORBA-based VFS.
	(test-channel_pthread): New target, compiling `test-channel.c'
	with the PThread-based VFS.

	* libgnomevfs-pthread/gnome-vfs-job.c (serve_channel_write): New
	function.
	(serve_channel_read): New function.
	(execute_open_as_channel): New function.
	(execute_create_as_channel): New function.
	(gnome_vfs_job_execute): Call `execute_open_as_channel()' and
	`execute_create_as_channel()' for jobs
	`GNOME_VFS_JOB_OPEN_AS_CHANNEL' and
	`GNOME_VFS_JOB_CREATE_AS_CHANNEL', respectively.
	(dispatch_open_or_create_as_channel_callback): New function.
	(dispatch_job_callback): Handle `GNOME_VFS_JOB_OPEN_AS_CHANNEL'
	and `GNOME_VFS_JOB_CREATE_AS_CHANNEL' through it.

	* libgnomevfs-pthread/gnome-vfs-async-ops.c
	(gnome_vfs_async_open_as_channel): New function.
	(gnome_vfs_async_create_as_channel): New function.

	* libgnomevfs-pthread/gnome-vfs-job.h: New structs
	`GnomeVFSOpenAsChannelJob', `GnomeVFSCreateAsChannelJob'; added
	corresponding members to `GnomeVFSJob'.  New values
	`GNOME_VFS_JOB_OPEN_AS_CHANNEL' and
	`GNOME_VFS_JOB_CREATE_AS_CHANNEL' in `GnomeVFSJobType'.

	* test/test-async-directory.c: Removed translation marks.
	* test/test-async.c: Likewise.
	* test/test-directory-visit.c: Likewise.
	* test/test-directory.c: Likewise.

	* libgnomevfs/gnome-vfs-result.c (gnome_vfs_result_from_errno):
	Translate `EPERM' with `GNOME_VFS_ERROR_NOTPERMITTED'.

	* libgnomevfs/gnome-vfs-types.h: Added value
	`GNOME_VFS_ERROR_NOTPERMITTED' to GnomeVFSError.

	* test/test-channel.c: New test program.

	* libgnomevfs-corba/gnome-vfs-slave.h (setup_and_serve_channel):
	New function.
	(serve_channel_read): New function.
	(serve_channel_write): New function.
	(impl_Request_open_as_channel): New function.
	(impl_Request_create_as_channel): New function.
	(init_Request): Install `impl_Request_open_as_channel' and
	`impl_Request_create_as_channel' as the implementations for
	`Request::open_as_channel' and `Request::create_as_channel',
	respectively.

	* libgnomevfs-corba/gnome-vfs-async-ops.c: New values
	`GNOME_VFS_ASYNC_OP_OPEN_AS_CHANNEL',
	`GNOME_VFS_ASYNC_OP_CREATE_AS_CHANNEL'
	`GNOME_VFS_ASYNC_OP_CHANNEL' in enum `GnomeVFSAsyncOperation'.
	Sorted values in alphabetical order.
	(gnome_vfs_async_open_as_channel): New function.
	(gnome_vfs_async_create_as_channel): New function.
	(impl_Notify_open_as_channel): New function.
	(create_notify_object): Install it as the implementation of
	`Notify::open_as_channel'.

	* idl/gnome-vfs-slave.idl (Request::open_as_channel): New method.
	(Request::create_as_channel): New method.
	(Notify::open_as_channel): New method.

	* libgnomevfs/gnome-vfs-async-ops.h
	(gnome_vfs_async_open_as_channel): Declare new function.
	(gnome_vfs_async_create_as_channel): Declare new function.

	* libgnomevfs/gnome-vfs-types.h: New typedefs
	`GnomeVFSAsyncOpenAsChannelCallback',
	`GnomeVFSAsyncCreateAsChannelCallback'.

	* libgnomevfs-corba/gnome-vfs-async-ops.c
	(gnome_vfs_async_create): Added precondition that file must be
	open for writing.
	(impl_Notify_reset): Oops.  Removed typo (`*' before parameter
	`servant').

1999-08-26  Michael Meeks  <michael@imaginator.com>

	* test/gnome-file-selection/gnome-file-selection.c
	(clean_file_list): Added. (change_dir): Clean list.
	(populate_callback): Add only files.

1999-08-26  Michael Meeks  <michael@imaginator.com>

	* test/gnome-file-selection/gnome-file-selection.c (destroy): 
	Destroy file_list.
	(GnomeFileSelectionPrivate): Changed file_list to GList.
	(select_icon_callback): use this list, add lots of preconditions.

1999-08-26  Michael Meeks  <michael@imaginator.com>

	* libgnomevfs/gnome-vfs-types.h: Add GnomeVFSFileSize, and
	GnomeVFSFileOffset ( unsigned, signed ). and push through the
	whole API - How will CORBA deal with this ?

1999-08-25  Michael Meeks  <michael@imaginator.com>

	* doc/writing-modules.txt: Started.

1999-08-25  Michael Meeks  <michael@imaginator.com>

	* http-method.[ch]: First pass at implementing.
	
	* modules/file-method.c: Add NULL RenameFunc to methods, and
	remove const from do_make_directory's GnomeVFSURI.

	* modules/Makefile.am: Add libhttp.la, commented out.

1999-08-25  Ettore Perazzoli  <ettore@comm2000.it>

	* modules/file-method.c: Preconditions return `GNOME_VFS_INTERNAL'
	instead of `GNOME_VFS_BAD_POINTER'.

	* libgnomevfs/gnome-vfs-types.h: Removed value
	`GNOME_VFS_BAD_POINTER' from the `GnomeVFSResult' enum.

1999-08-25  Michael Meeks  <michael@imaginator.com>

	* modules/file-method.c: Update all preconditions to return BAD_POINTER
	as their GnomeVFSResult instead of FALSE.

	* libgnomevfs/gnome-vfs-types.h: Added GNOME_VFS_ERROR_BAD_POINTER.

	* modules/gzip-method.h: Rename conditional include
	from _FILE_H to _GZIP_H

1999-08-25  Ettore Perazzoli  <ettore@comm2000.it>

	* configure.in: Add gnomeui libs to `VFSCORBA_LIBS'.
